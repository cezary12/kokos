<controls:MetroWindow xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:viewModel="clr-namespace:kokos.WPF.ViewModel"
                      xmlns:converters="clr-namespace:kokos.WPF.Converters"
                      xmlns:attachedProperties="clr-namespace:kokos.WPF.AttachedProperties"
                      xmlns:oxy="http://oxyplot.codeplex.com"
                      x:Class="kokos.WPF.MainWindow"
                      Title="kokos 0.1" Height="680" Width="800">
    <controls:MetroWindow.Resources>
        <converters:NegateBooleanConverter x:Key="NegateBooleanConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--Link Button-->
        <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB"/>
        <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF"/>
        <Style x:Key="LinkButton"
           TargetType="Button">
            <Setter Property="Cursor"
                Value="Hand" />
            <Setter Property="Foreground"
                Value="{StaticResource LinkButtonForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock><ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                     Value="true">
                    <Setter Property="Foreground"
                        Value="{StaticResource LinkButtonForegroundHighlighted}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.DataContext>
        <viewModel:MainViewModel/>
    </controls:MetroWindow.DataContext>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Content="Logout" Command="{Binding LoginViewModel.LogoutCommand, Mode=OneWay}" Visibility="{Binding LoginViewModel.IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Visibility="{Binding LoginViewModel.IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Not}">
            <Grid.InputBindings>
                <KeyBinding Command="{Binding LoginViewModel.LoginCommand}" Key="Enter"/>
            </Grid.InputBindings>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Width="200" IsEnabled="{Binding LoginViewModel.IsBusy, Converter={StaticResource NegateBooleanConverter}}"
                        FocusManager.FocusedElement="{Binding ElementName=LoginBox}">
                <TextBox Margin="0,5" controls:TextboxHelper.Watermark="Login" Text="{Binding LoginViewModel.Login, UpdateSourceTrigger=PropertyChanged}" Name="LoginBox" />
                <PasswordBox Margin="0,5" controls:TextboxHelper.Watermark="Password" Name="PasswordBox"
                             attachedProperties:PasswordBoxAssistant.BindPassword="true"
                             attachedProperties:PasswordBoxAssistant.BoundPassword="{Binding Path=LoginViewModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox Margin="0,5" Content="remember me" IsChecked="{Binding LoginViewModel.RememberLoginData}" />
                <Button Margin="0,15" Style="{DynamicResource AccentedSquareButtonStyle}" Content="Login" Command="{Binding LoginViewModel.LoginCommand, Mode=OneWay}"/>
            </StackPanel>
            <controls:MetroProgressBar Grid.Row="1" IsIndeterminate="True" HorizontalAlignment="Stretch" Visibility="{Binding LoginViewModel.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>
        <Grid Visibility="{Binding LoginViewModel.IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" MinWidth="100" />
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"></GridSplitter>
            <ListBox Grid.Column="0" ItemsSource="{Binding Symbols}"
                      SelectedIndex="0" SelectedItem="{Binding SelectedSymbol}" IsSynchronizedWithCurrentItem="True">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"></TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid Grid.Column="2"  IsEnabled="{Binding SelectedSymbol.IsBusy, Converter={StaticResource NegateBooleanConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TabControl Grid.Row="1">
                    <TabItem Header="chart">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Margin="0,5">
                                <Button Content="1d" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="1d" >
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="1d">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="1w" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="1w">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="1w">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="1m" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="1m">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="1m">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="3m" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="3m">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="3m">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="12m" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="12m">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="12m">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button Content="5y" Margin="5,0" Command="{Binding SelectedSymbol.LoadTickData}" CommandParameter="5y">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource LinkButton}" TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedSymbol.Duration}" Value="5y">
                                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                            <oxy:Plot Grid.Row="1" Model="{Binding SelectedSymbol.Plot}" Controller="{Binding SelectedSymbol.PlotController}"
                                      Visibility="{Binding SelectedSymbol.IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      IsEnabled="{Binding SelectedSymbol.IsBusy, Converter={StaticResource NegateBooleanConverter}}"/>
                            <oxy:Plot Grid.Row="2" Model="{Binding SelectedSymbol.PlotAnalysis}" Controller="{Binding SelectedSymbol.PlotAnalysisController}"
                                      Visibility="{Binding SelectedSymbol.IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      IsEnabled="{Binding SelectedSymbol.IsBusy, Converter={StaticResource NegateBooleanConverter}}"/>                        </Grid>
                    </TabItem>
                    <TabItem Header="table">
                        <DataGrid  ItemsSource="{Binding SelectedSymbol.Ticks}" IsReadOnly="True" AutoGenerateColumns="False"
                                   VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                                   Visibility="{Binding SelectedSymbol.IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   IsEnabled="{Binding SelectedSymbol.IsBusy, Converter={StaticResource NegateBooleanConverter}}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Time" Binding="{Binding TimeString}" MinWidth="120"/>
                                <controls:DataGridNumericUpDownColumn Header="Open" Binding="{Binding Open, Mode=OneTime}" StringFormat="N4" MinWidth="110" Width="*"/>
                                <controls:DataGridNumericUpDownColumn Header="High" Binding="{Binding High, Mode=OneTime}" StringFormat="N4" MinWidth="110" Width="*"/>
                                <controls:DataGridNumericUpDownColumn Header="Low" Binding="{Binding Low, Mode=OneTime}" StringFormat="N4" MinWidth="110" Width="*"/>
                                <controls:DataGridNumericUpDownColumn Header="Close" Binding="{Binding Close, Mode=OneTime}" StringFormat="N4" MinWidth="110" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Grid>
            <Grid Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Visibility="{Binding SelectedSymbol.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <controls:MetroProgressBar Grid.Row="0" IsIndeterminate="True" HorizontalAlignment="Stretch"/>
            </Grid>
        </Grid>
    </Grid>
</controls:MetroWindow>
